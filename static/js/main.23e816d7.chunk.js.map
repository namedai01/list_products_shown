{"version":3,"sources":["components/Popup/Popup.js","components/Home/Item.js","api/index.js","assets/default.jpeg","components/Home/HomeMain.js","pages/Home.js","App.js","reportWebVitals.js","index.js","components/Home/home.module.css","components/Popup/popup.module.css"],"names":["Popup","isModalVisible","changedProducts","colors","handleOk","title","visible","onOk","onCancel","className","styles","popupContainer","Object","keys","map","key","index","div121","image","src","alt","content","style","color","name","id","sku","PropTypes","bool","isRequired","array","func","Item","product","originProduct","handleChangeProduct","takeChangedProducts","useState","isSubmitting","setIsSubmitting","listErrors","setListErrors","partFixed","setPartFixed","handleChange","e","target","value","unFocus","temp","values","errors","undefined","length","validate","useEffect","containerItem","errorDescription","formRow","type","onChange","onBlur","inputError","inputCorrect","error","width","takeChangeProducts","getProducts","a","axios","get","response","data","console","log","getColors","HomeMain","products","setProducts","originProducts","setOriginProducts","setColors","setChangeProducts","setIsModalVisible","totalPage","current","minIndex","maxIndex","page","setPage","proNeedFixed","api","productsData","colorsData","object","reduce","obj","item","assign","fetchData","container","onClick","entries","validateChangedProducts","defaultImg","pageSize","total","curPage","marginTop","Home","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6VAOe,SAASA,EAAT,GAKX,IAAD,IAJCC,sBAID,aAHCC,uBAGD,MAHmB,GAGnB,MAFCC,cAED,MAFU,GAEV,EADCC,EACD,EADCA,SAEA,OACI,cAAC,IAAD,CACIC,MAAM,uBACNC,QAASL,EACTM,KAAMH,EACNI,SAAUJ,EAJd,SAKI,qBAAKK,UAAWC,IAAOC,eAAvB,SACKC,OAAOC,KAAKX,GAAiBY,KAAI,SAACC,EAAKC,GAAN,OAC9B,sBAA2BP,UAAWC,IAAOO,OAA7C,UACI,qBAAKR,UAAWC,IAAOQ,MAAvB,SACI,qBACIC,IAAKjB,EAAgBa,GAAKG,MAC1BE,IAAI,cAGZ,sBAAKX,UAAWC,IAAOW,QAAvB,UACI,sBAAMC,MAAO,CAAEC,MAAO,SAAtB,SACKrB,EAAgBa,GAAKS,OAE1B,wCACQ,+BAAOtB,EAAgBa,GAAKU,QAEpC,wCACS,IACL,sBAAMH,MAAO,CAAEC,MAAO,OAAtB,SACKrB,EAAgBa,GAAKW,SAG9B,0CACW,IACP,+BACKvB,EAAOD,EAAgBa,GAAKQ,iBAvBnC,QAAUP,UAoCxChB,EAAM2B,UAAY,CACd1B,eAAgB0B,IAAUC,KAAKC,WAC/B3B,gBAAiByB,IAAUG,MAAMD,WACjC1B,OAAQwB,IAAUG,MAAMD,WACxBzB,SAAUuB,IAAUI,KAAKF,Y,qBCvDd,SAASG,EAAT,GAOX,IAAD,IANCC,eAMD,MANW,GAMX,MALC9B,cAKD,MALU,GAKV,MAJC+B,qBAID,MAJiB,GAIjB,MAHClB,aAGD,MAHS,EAGT,EAFCmB,EAED,EAFCA,oBACAC,EACD,EADCA,oBAGA,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAGA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAGA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KA6BMC,EAAe,SAACC,GAClBV,EAAoBU,EAAEC,OAAOtB,KAAMqB,EAAEC,OAAOC,OAAS,KAAM/B,IAKzDgC,EAAU,SAACH,GACb,IAAII,EAAI,eAAMJ,EAAEC,OAAOtB,KAAOqB,EAAEC,OAAOC,OAAS,MAEhDN,EAlCa,SAACS,GACd,IAAIC,EAAS,GAoBb,YAjBoBC,IAAhBF,EAAO1B,OACF0B,EAAO1B,KAED0B,EAAO1B,KAAK6B,OAAS,KAC5BF,EAAO3B,KAAO,mCAFd2B,EAAO3B,KAAO,wBAOH4B,IAAfF,EAAOxB,MACFwB,EAAOxB,IAEDwB,EAAOxB,IAAI2B,OAAS,KAC3BF,EAAOzB,IAAM,kCAFbyB,EAAOzB,IAAM,mBAMdyB,EAaOG,CAASL,IAEvBN,EAAaM,GAEbV,GAAgB,IAOpB,OAJAgB,qBAAU,WACNjB,GAAgBF,EAAoBF,EAAeQ,KACpD,CAACF,IAGA,qBAAI/B,UAAWC,IAAO8C,cAAtB,UACI,6BAAKvB,EAAQR,KACb,6BAAKQ,EAAQwB,mBACb,6BACI,qBAAKtC,IAAKc,EAAQf,MAAOE,IAAI,cAEjC,6BACI,sBAAKX,UAAWC,IAAOgD,QAAvB,UACI,uBACIC,KAAK,OACLZ,MAAOd,EAAQT,KACfA,KAAK,OACLoC,SAAUhB,EACViB,OAAQb,EACRvC,UACI+B,EAAWhB,KACLd,IAAOoD,WACPpD,IAAOqD,eAGpBvB,EAAWhB,MACR,sBAAMf,UAAWC,IAAOsD,MAAxB,SAAgCxB,EAAWhB,YAIvD,oBAAIF,MAAO,CAAE2C,MAAO,OAApB,SACI,sBAAKxD,UAAWC,IAAOgD,QAAvB,UACI,uBACIC,KAAK,OACLZ,MAAOd,EAAQP,IACfF,KAAK,MACLoC,SAAUhB,EACViB,OAAQb,EACRvC,UACI+B,EAAWd,IACLhB,IAAOoD,WACPpD,IAAOqD,eAGpBvB,EAAWd,KACR,sBAAMjB,UAAWC,IAAOsD,MAAxB,SAAgCxB,EAAWd,WAIvD,6BACI,yBAEIqB,MAAOd,EAAQV,OAAS,GACxBC,KAAK,QACLF,MAAO,CAAEC,MAAO,SAChBqC,SAAUhB,EACViB,OAAQb,EANZ,UAOI,wBAAQD,MAAM,KACbnC,OAAOC,KAAKV,GAAQW,KAAI,SAACC,EAAKC,GAC3B,OACI,wBAA8B+B,MAAOhC,EAArC,SACKZ,EAAOY,IADC,QAAUC,cAanDgB,EAAKL,UAAY,CACbM,QAASN,IAAUG,MAAMD,WACzB1B,OAAQwB,IAAUG,MAAMD,WACxBqC,mBAAoBvC,IAAUI,KAAKF,Y,4BC3I1BsC,EAAW,uCAAG,4BAAAC,EAAA,+EAEIC,IAAMC,IAAI,wDAFd,cAEbC,EAFa,yBAGZA,EAASC,MAHG,uCAKnBC,QAAQC,IAAR,MALmB,kBAMZ,IANY,yDAAH,qDAWXC,EAAS,uCAAG,4BAAAP,EAAA,+EAEMC,IAAMC,IAAI,sDAFhB,cAEXC,EAFW,yBAGVA,EAASC,MAHC,uCAKjBC,QAAQC,IAAR,MALiB,kBAMV,IANU,yDAAH,qDCdP,MAA0B,qCCoB1B,SAASE,IAEpB,MAAgCvC,mBAAS,IAAzC,mBAAOwC,EAAP,KAAiBC,EAAjB,KAGA,EAA4CzC,mBAAS,IAArD,mBAAO0C,EAAP,KAAuBC,EAAvB,KAGA,EAA4B3C,mBAAS,IAArC,mBAAOlC,EAAP,KAAe8E,EAAf,KAGA,EAA6C5C,mBAAS,IAAtD,mBAAOnC,EAAP,KAAwBgF,EAAxB,KAGA,EAA4C7C,oBAAS,GAArD,mBAAOpC,EAAP,KAAuBkF,EAAvB,KAGA,EAAwB9C,mBAAS,CAC7B+C,UAAW,EACXC,QAAS,EACTC,SAAU,EACVC,SAAU,IAJd,mBAAOC,EAAP,KAAaC,EAAb,KAQMrD,EAAsB,SAACsD,EAAchD,GACvC,IAAIO,EAAI,2BACD/C,GADC,eAGCwF,EAAajE,GAHd,uCAIOiE,GACAxF,EAAgBwF,EAAajE,KAC7BiB,KAKfwC,EAAkBjC,IAsBtBM,qBAAU,YACS,uCAAG,gCAAAa,EAAA,sEAEauB,IAFb,cAERC,EAFQ,OAKdd,EAAYc,GACZZ,EAAkBY,GAGlBH,EAAQ,CACJL,UAAWQ,EAAavC,OAxEvB,GAyEDiC,SAAU,EACVC,SA1EC,KA8DS,SAgBWI,IAhBX,OAgBRE,EAhBQ,OAmBVC,EAASD,EAAWE,QACpB,SAACC,EAAKC,GAAN,OAAerF,OAAOsF,OAAOF,EAAdpF,OAAA,IAAAA,CAAA,GAAsBqF,EAAKxE,GAAKwE,EAAKzE,SACpD,IAIJyD,EAAUa,GAzBI,4CAAH,qDA2BfK,KACD,IAGH,IASMhE,EAAsB,SAACpB,EAAKgC,EAAO/B,GACrC,IAAIiC,EAAI,YAAO4B,GACf5B,EAAKjC,GAAOD,GAAOgC,EACnB+B,EAAY7B,IAGhB,OACI,sBAAKxC,UAAWC,IAAO0F,UAAvB,UACI,wDACA,gCACI,wBAAQC,QAvDF,WACdzF,OAAOC,KAAKX,GAAiBmD,OAAS,GAVV,WAC5B,cAA6BzC,OAAO0F,QAAQpG,GAA5C,eAA8D,CAAzD,0BAAY+B,GAAZ,WACD,IAAKA,EAAQT,OAASS,EAAQP,IAAK,OAAO,EAC1C,GAAIO,EAAQT,KAAK6B,OAAS,IAAMpB,EAAQP,IAAI2B,OAAS,GAAI,OAAO,EAEpE,OAAO,EAKoCkD,IAA6BpB,GAAkB,IAsDlF,oBACA,cAACnF,EAAD,CAAOC,eAAgBA,EAAgBG,SAtElC,WACb+E,GAAkB,IAqEiDjF,gBAAiBA,EAAiBC,OAAQA,OAEzG,kCACI,gCACI,+BACI,oCACA,mDACA,+CACA,8CACA,qCACA,4CAIR,gCACK0E,EAAS/D,KAAI,SAACmB,EAASjB,GACpB,GAAIwE,EAAKF,UAAYtE,GAASA,EAAQwE,EAAKD,SAGvC,MAFsB,KAAlBtD,EAAQf,QACRe,EAAQf,MAAQsF,GAEhB,cAACxE,EAAD,CACIC,QAASA,EACTC,cAAe6C,EAAe/D,GAC9Bb,OAAQA,EAERiC,oBAAqBA,EACrBD,oBAAqBA,EACrBnB,MAASA,GAHJ,UAAYA,WAW7C,cAAC,IAAD,CACIyF,SArJK,GAsJLpB,QAASG,EAAKH,QACdqB,MAAO7B,EAASxB,OAChBO,SA3DiB,SAAC+C,GACtBlB,EAAQ,CACJJ,QAASsB,EACTrB,SAhGK,IAgGMqB,EAAU,GACrBpB,SAjGK,GAiGKoB,KAwDVrF,MAAO,CAAEsF,UAAW,aCvKhC,IASeC,EATF,WACT,OACI,8BAEI,cAACjC,EAAD,O,OCaGkC,MAbf,WACI,OACI,cAAC,IAAD,UACI,qBAAKrG,UAAU,MAAf,SACI,cAAC,IAAD,UAEI,cAAC,IAAD,CAAOsG,OAAK,EAACC,KAAK,IAAIC,UAAWJ,WCFtCK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,mBCfAc,EAAOC,QAAU,CAAC,UAAY,wBAAwB,cAAgB,4BAA4B,aAAe,2BAA2B,MAAQ,oBAAoB,QAAU,sBAAsB,WAAa,2B,mBCArND,EAAOC,QAAU,CAAC,eAAiB,8BAA8B,MAAQ,qBAAqB,QAAU,0B","file":"static/js/main.23e816d7.chunk.js","sourcesContent":["import Modal from \"antd/lib/modal/Modal\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Css\r\nimport styles from \"./popup.module.css\";\r\n\r\nexport default function Popup({\r\n    isModalVisible = false,\r\n    changedProducts = [],\r\n    colors = [],\r\n    handleOk,\r\n}) {\r\n    return (\r\n        <Modal\r\n            title=\"Re-Uploaded Products\"\r\n            visible={isModalVisible}\r\n            onOk={handleOk}\r\n            onCancel={handleOk}>\r\n            <div className={styles.popupContainer}>\r\n                {Object.keys(changedProducts).map((key, index) => (\r\n                    <div key={\"popup\" + index} className={styles.div121}>\r\n                        <div className={styles.image}>\r\n                            <img\r\n                                src={changedProducts[key].image}\r\n                                alt=\"Failure\"\r\n                            />\r\n                        </div>\r\n                        <div className={styles.content}>\r\n                            <span style={{ color: \"black\" }}>\r\n                                {changedProducts[key].name}\r\n                            </span>\r\n                            <span>\r\n                                ID: <span>{changedProducts[key].id}</span>\r\n                            </span>\r\n                            <span>\r\n                                SKU:{\" \"}\r\n                                <span style={{ color: \"red\" }}>\r\n                                    {changedProducts[key].sku}\r\n                                </span>\r\n                            </span>\r\n                            <span>\r\n                                Color:{\" \"}\r\n                                <span>\r\n                                    {colors[changedProducts[key].color]}\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Modal>\r\n    );\r\n}\r\n\r\n// Type of props\r\n// eslint-disable-next-line react/no-typos\r\nPopup.PropTypes = {\r\n    isModalVisible: PropTypes.bool.isRequired,\r\n    changedProducts: PropTypes.array.isRequired,\r\n    colors: PropTypes.array.isRequired,\r\n    handleOk: PropTypes.func.isRequired,\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Css\r\nimport styles from \"./home.module.css\";\r\n\r\nexport default function Item({\r\n    product = [],\r\n    colors = [],\r\n    originProduct = [],\r\n    index = 0,\r\n    handleChangeProduct,\r\n    takeChangedProducts,\r\n}) {\r\n    // Flag to determine if the data can be submit to the parent component\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    // List of errors when user don't obey the data format\r\n    const [listErrors, setListErrors] = useState({});\r\n\r\n    // The part of data of product that be fixed by user\r\n    const [partFixed, setPartFixed] = useState({});\r\n\r\n    // Function to validate the requirement \"is required,\r\n    // limit length\" that return the errors when user don't obey the data format\r\n    const validate = (values) => {\r\n        let errors = {};\r\n\r\n        // Validate the name of product\r\n        if (values.name !== undefined) {\r\n            if (!values.name) {\r\n                errors.name = \"Cannot be blank\";\r\n            } else if (values.name.length > 50) {\r\n                errors.name = \"Name have at most 50 characters\";\r\n            }\r\n        }\r\n\r\n        // Validate the sku of product\r\n        if (values.sku !== undefined) {\r\n            if (!values.sku) {\r\n                errors.sku = \"Cannot be blank\";\r\n            } else if (values.sku.length > 20) {\r\n                errors.sku = \"Sku have at most 20 characters\";\r\n            }\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    // Handle the changed text on the screen\r\n    const handleChange = (e) => {\r\n        handleChangeProduct(e.target.name, e.target.value || null, index);\r\n    };\r\n\r\n    // When user don't focus the cell, the data of product entered by\r\n    // user will determine if that can be submitted to parent component to popup the result\r\n    const unFocus = (e) => {\r\n        let temp = { [e.target.name]: e.target.value || null };\r\n\r\n        setListErrors(validate(temp));\r\n\r\n        setPartFixed(temp);\r\n\r\n        setIsSubmitting(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        isSubmitting && takeChangedProducts(originProduct, partFixed);\r\n    }, [listErrors]);\r\n\r\n    return (\r\n        <tr className={styles.containerItem}>\r\n            <td>{product.id}</td>\r\n            <td>{product.errorDescription}</td>\r\n            <td>\r\n                <img src={product.image} alt=\"Failure\" />\r\n            </td>\r\n            <td>\r\n                <div className={styles.formRow}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={product.name}\r\n                        name=\"name\"\r\n                        onChange={handleChange}\r\n                        onBlur={unFocus}\r\n                        className={\r\n                            listErrors.name\r\n                                ? styles.inputError\r\n                                : styles.inputCorrect\r\n                        }\r\n                    />\r\n                    {listErrors.name && (\r\n                        <span className={styles.error}>{listErrors.name}</span>\r\n                    )}\r\n                </div>\r\n            </td>\r\n            <td style={{ width: \"10%\" }}>\r\n                <div className={styles.formRow}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={product.sku}\r\n                        name=\"sku\"\r\n                        onChange={handleChange}\r\n                        onBlur={unFocus}\r\n                        className={\r\n                            listErrors.sku\r\n                                ? styles.inputError\r\n                                : styles.inputCorrect\r\n                        }\r\n                    />\r\n                    {listErrors.sku && (\r\n                        <span className={styles.error}>{listErrors.sku}</span>\r\n                    )}\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <select\r\n                    // Convert null to string \"\"\r\n                    value={product.color || \"\"}\r\n                    name=\"color\"\r\n                    style={{ color: \"black\" }}\r\n                    onChange={handleChange}\r\n                    onBlur={unFocus}>\r\n                    <option value=\"\"></option>\r\n                    {Object.keys(colors).map((key, index) => {\r\n                        return (\r\n                            <option key={\"color\" + index} value={key}>\r\n                                {colors[key]}\r\n                            </option>\r\n                        );\r\n                    })}\r\n                </select>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\n// Type of props\r\n// eslint-disable-next-line react/no-typos\r\nItem.PropTypes = {\r\n    product: PropTypes.array.isRequired,\r\n    colors: PropTypes.array.isRequired,\r\n    takeChangeProducts: PropTypes.func.isRequired,\r\n};\r\n","import axios from \"axios\";\r\n\r\n// The function to get data of products from api\r\nexport const getProducts = async () => {\r\n    try {\r\n        const response = await axios.get(\"https://60ae0d5e80a61f00173324bc.mockapi.io/products\");\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return [];\r\n    }\r\n}\r\n\r\n// The function to get data of colors from api\r\nexport const getColors = async () => {\r\n    try {\r\n        const response = await axios.get(\"https://60ae0d5e80a61f00173324bc.mockapi.io/colors\");\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return [];\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/default.e2239d94.jpeg\";","import React, { useEffect, useState } from \"react\";\r\nimport { Pagination } from \"antd\";\r\n\r\n// My components\r\nimport Popup from \"../Popup/Popup.js\";\r\nimport Item from \"./Item.js\";\r\n\r\n// Css\r\nimport styles from \"./home.module.css\";\r\nimport \"antd/dist/antd.css\";\r\n\r\n// Get api \r\nimport * as api from \"../../api/index.js\";\r\n\r\n// Get default image\r\nimport defaultImg from \"../../assets/default.jpeg\";\r\n\r\n// Int page size\r\nconst pageSize = 10;\r\n\r\nexport default function HomeMain() {\r\n    // State \"products\" can be changed elements\r\n    const [products, setProducts] = useState([]);\r\n\r\n    // State \"originProducts\" cannot be changed elements, that is origin products\r\n    const [originProducts, setOriginProducts] = useState([]);\r\n\r\n    // State for object colors\r\n    const [colors, setColors] = useState({});\r\n\r\n    // The products can be fixed by user can be save in Object \"changedProducts\"\r\n    const [changedProducts, setChangeProducts] = useState({});\r\n\r\n    // Determine the modal can be visible or not\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    // Object page to control the pagination\r\n    const [page, setPage] = useState({\r\n        totalPage: 0,\r\n        current: 1,\r\n        minIndex: 0,\r\n        maxIndex: 0,\r\n    });\r\n\r\n    // Function to push the changed product to the Dictionary \"changedProducts\"\r\n    const takeChangedProducts = (proNeedFixed, partFixed) => {\r\n        let temp = {\r\n            ...changedProducts,\r\n            ...{\r\n                [proNeedFixed.id]: {\r\n                    ...proNeedFixed,\r\n                    ...changedProducts[proNeedFixed.id],\r\n                    ...partFixed,\r\n                },\r\n            },\r\n        };\r\n        \r\n        setChangeProducts(temp);\r\n    };\r\n\r\n    // Handle for close the modal (Popup)\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    // Validate that the condition \"is required, limit length\" is satisfied\r\n    const validateChangedProducts = () => {\r\n        for (const [key, product] of Object.entries(changedProducts)) {\r\n            if (!product.name || !product.sku) return false;\r\n            if (product.name.length > 50 || product.sku.length > 50) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Function to pop up a modal\r\n    const showModal = () => {\r\n        Object.keys(changedProducts).length > 0 && validateChangedProducts() && setIsModalVisible(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            // Get the list of error products from api through function getProducts\r\n            const productsData = await api.getProducts();\r\n\r\n            // Set state for state \"products\" (may be changed) and \"originProducts\" (cannot be changed)\r\n            setProducts(productsData);\r\n            setOriginProducts(productsData);\r\n\r\n            // Set state to calc the total page, min and max index for each page\r\n            setPage({\r\n                totalPage: productsData.length / pageSize,\r\n                minIndex: 0,\r\n                maxIndex: pageSize,\r\n            });\r\n\r\n            // Get the list color from apu through function getColors\r\n            const colorsData = await api.getColors();\r\n\r\n            // Convert array of colors to object colors. Ex: {\"1\": \"white\", ...}\r\n            var object = colorsData.reduce(\r\n                (obj, item) => Object.assign(obj, { [item.id]: item.name }),\r\n                {}\r\n            );\r\n\r\n            // Set state for object colors\r\n            setColors(object);\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Change page for pagination\r\n    const handleChangePage = (curPage) => {\r\n        setPage({\r\n            current: curPage,\r\n            minIndex: (curPage - 1) * pageSize,\r\n            maxIndex: curPage * pageSize,\r\n        });\r\n    };\r\n\r\n    // Update product to display the screen\r\n    const handleChangeProduct = (key, value, index) => {\r\n        let temp = [...products];\r\n        temp[index][key] = value;\r\n        setProducts(temp);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <h1>List of error products</h1>\r\n            <div>\r\n                <button onClick={showModal}>Submit</button>\r\n                <Popup isModalVisible={isModalVisible} handleOk={handleOk} changedProducts={changedProducts} colors={colors}/>\r\n            </div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Error Description</th>\r\n                        <th>Product Image</th>\r\n                        <th>Product Name</th>\r\n                        <th>SKU</th>\r\n                        <th>Color</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {products.map((product, index) => {\r\n                        if (page.minIndex <= index && index < page.maxIndex) {\r\n                            if (product.image === \"\")\r\n                                product.image = defaultImg;\r\n                            return (\r\n                                <Item\r\n                                    product={product}\r\n                                    originProduct={originProducts[index]}\r\n                                    colors={colors}\r\n                                    key={\"product\" + index}\r\n                                    takeChangedProducts={takeChangedProducts}\r\n                                    handleChangeProduct={handleChangeProduct}\r\n                                    index = {index}\r\n                                />\r\n                            );\r\n                        }\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n\r\n        <Pagination\r\n            pageSize={pageSize}\r\n            current={page.current}\r\n            total={products.length}\r\n            onChange={handleChangePage}\r\n            style={{ marginTop: \"15px\" }}\r\n        />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// My component\r\nimport HomeMain from \"../components/Home/HomeMain.js\";\r\n\r\nconst Home = () => {    \r\n    return (\r\n        <div>\r\n        {/* The main component, there may also be other components as Nav, Header, Footer */}\r\n            <HomeMain />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\n// My components\nimport Home from \"./pages/Home\";\n\n// Css\nimport \"./App.css\";\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <Switch>\n                {/* Main web with route \"/\" */}\n                    <Route exact path=\"/\" component={Home} />\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"home_container__293IA\",\"containerItem\":\"home_containerItem__3r-q2\",\"inputCorrect\":\"home_inputCorrect__2Jbe0\",\"error\":\"home_error__2Fycz\",\"formRow\":\"home_formRow__2LOL1\",\"inputError\":\"home_inputError__3wTV6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popupContainer\":\"popup_popupContainer__3Lyu_\",\"image\":\"popup_image__33bXo\",\"content\":\"popup_content__1Nsqw\"};"],"sourceRoot":""}